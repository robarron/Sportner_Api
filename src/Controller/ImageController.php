<?php

namespace App\Controller;

use App\Entity\Image;
use App\Entity\User;
use App\Service\ImageService;
use FOS\RestBundle\View\View;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use FOS\RestBundle\Controller\Annotations as Rest;
use JMS\Serializer\SerializerInterface as Serializer;

class ImageController extends AbstractController
{

    const SERVER_PATH_TO_IMAGE_FOLDER = '../../public/upload/img';

    /**
     * Creates an Image resource
     * @Rest\Post("/image")
     * @param Request $request
     * @return View
     */
    public function postImage(Request $request, Serializer $serializer): View
    {

        $entityManager = $this->getDoctrine()->getManager();
        $user = $entityManager->getRepository(User::class)->findOneBy(["email" => "rbarron@carvivo.com"]);
//        dump($request);
        $imageArray = $request->files->get('photo');
//        dump( $imageArray);die;

//        $imageObject = $request->get('imageObject');
        $image = new Image();
        $image->setImage($imageArray);
        $image->setImageFile($imageArray);
//        $image->setDescription($request->get('description'));
        $image->setUser($user);
        $serializer->serialize($image, 'json');


//        dump($image->getImageFile());die;

        $entityManager->persist($image);
        $image->getImageFile()->move(__DIR__ . '/../../public/upload/img', 'coucou.jpeg');

        $entityManager->flush();
//        $imgService->uploadFile();

//        $file = new UploadedFile($request->get('path'), "name");
//        $file = $image->getFile();

//        $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

        // Move the file to the directory where brochures are stored
//        try {
//            $file->move(
//                $this->getParameter(self::SERVER_PATH_TO_IMAGE_FOLDER),
//                $fileName
//            );
//        } catch (FileException $e) {
//            throw new \Exception("PAS BIEN");
//        }

//        $image->setFile($fileName);

//        $image->move(self::SERVER_PATH_TO_IMAGE_FOLDER, "nom");
//        $image->upload();
        // In case our POST was a success we need to return a 201 HTTP CREATED response
        return View::create($image, Response::HTTP_CREATED);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
