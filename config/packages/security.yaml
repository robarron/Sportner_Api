security:
    encoders:
        App\Entity\User: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
         our_users:
             entity: { class: App\Entity\User, property: email }
        # used to reload user from session & other features (e.g. switch_user)
#        app_user_provider:
#            entity:
#                class: App\Entity\User
#                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            provider: our_users
            anonymous: ~
            logout: ~
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

#            guard:
#                authenticators:
#                    - App\Security\TokenAuthenticator
#        secured_area:
#            anonymous: ~
#            provider: hwi
#            oauth:
#                resource_owners:
#                    facebook:           "/login/check-facebook"
#                    google:             "/login/check-google"
#                    my_custom_provider: "/login/check-custom"
#                    my_github:          "/login/check-github"
#                login_path:        /login
#                use_forward:       false
#                failure_path:      /login
#
#                oauth_user_provider:
#                    service: hwi_oauth.user.provider


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/demo/hello, roles: ROLE_OAUTH_USER }
#        - { path: ^/api/, priorities: [ html, json, xml ]}
#        - { path: '^/', priorities: [ 'html', '*/*']}
